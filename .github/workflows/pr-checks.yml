name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-title-check:
    name: Check PR Title
    runs-on: ubuntu-latest

    steps:
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false

  pr-size-check:
    name: Check PR Size
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR size
        run: |
          # Count changed lines
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}

          CHANGED_LINES=$(git diff --shortstat $BASE_SHA $HEAD_SHA | awk '{print $4+$6}')

          echo "Changed lines: $CHANGED_LINES"

          if [ "$CHANGED_LINES" -gt 1000 ]; then
            echo "⚠️ Warning: This PR is quite large ($CHANGED_LINES lines changed)"
            echo "Consider splitting it into smaller PRs for easier review."
          else
            echo "✅ PR size is reasonable ($CHANGED_LINES lines changed)"
          fi

  test-coverage-check:
    name: Check Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Check coverage thresholds
        run: |
          echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Coverage report:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage-summary.json | python3 -m json.tool >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Coverage summary not available" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Comment coverage on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;

            const comment = `## 📊 Test Coverage Report

            | Metric | Percentage | Status |
            |--------|------------|--------|
            | Statements | ${total.statements.pct}% | ${total.statements.pct >= 95 ? '✅' : '⚠️'} |
            | Branches | ${total.branches.pct}% | ${total.branches.pct >= 90 ? '✅' : '⚠️'} |
            | Functions | ${total.functions.pct}% | ${total.functions.pct >= 100 ? '✅' : '⚠️'} |
            | Lines | ${total.lines.pct}% | ${total.lines.pct >= 95 ? '✅' : '⚠️'} |

            **Thresholds:** Statements: 95%, Branches: 90%, Functions: 100%, Lines: 95%
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  build-check:
    name: Check Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Verify build outputs
        run: |
          echo "## Build Verification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Output Files:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -lh dist/ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

          # Check required files exist
          for file in iframe-resizing.js iframe-resizing.cjs index.d.ts; do
            if [ -f "dist/$file" ]; then
              echo "✅ $file exists" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ $file missing" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          done

  code-quality-check:
    name: Check Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Biome CI check
        run: npm run ci:check

      - name: Report results
        if: always()
        run: |
          echo "## Code Quality Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Biome CI check completed. Review logs above for details." >> $GITHUB_STEP_SUMMARY
